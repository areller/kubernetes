/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// VolumeClaimTemplateStatusApplyConfiguration represents an declarative configuration of the VolumeClaimTemplateStatus type for use
// with apply.
type VolumeClaimTemplateStatusApplyConfiguration struct {
	TemplateName                     *string `json:"templateName,omitempty"`
	FinishedReconciliationGeneration *int64  `json:"finishedReconciliationGeneration,omitempty"`
	ReadyReplicas                    *int32  `json:"readyReplicas,omitempty"`
}

// VolumeClaimTemplateStatusApplyConfiguration constructs an declarative configuration of the VolumeClaimTemplateStatus type for use with
// apply.
func VolumeClaimTemplateStatus() *VolumeClaimTemplateStatusApplyConfiguration {
	return &VolumeClaimTemplateStatusApplyConfiguration{}
}

// WithTemplateName sets the TemplateName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TemplateName field is set to the value of the last call.
func (b *VolumeClaimTemplateStatusApplyConfiguration) WithTemplateName(value string) *VolumeClaimTemplateStatusApplyConfiguration {
	b.TemplateName = &value
	return b
}

// WithFinishedReconciliationGeneration sets the FinishedReconciliationGeneration field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FinishedReconciliationGeneration field is set to the value of the last call.
func (b *VolumeClaimTemplateStatusApplyConfiguration) WithFinishedReconciliationGeneration(value int64) *VolumeClaimTemplateStatusApplyConfiguration {
	b.FinishedReconciliationGeneration = &value
	return b
}

// WithReadyReplicas sets the ReadyReplicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ReadyReplicas field is set to the value of the last call.
func (b *VolumeClaimTemplateStatusApplyConfiguration) WithReadyReplicas(value int32) *VolumeClaimTemplateStatusApplyConfiguration {
	b.ReadyReplicas = &value
	return b
}
